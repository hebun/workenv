package setest;

import java.util.Collection;
import java.util.Map;
import java.util.Set;

public class StringMap implements Map<String, String> {
	private static final int GROW_COUNT = 4;
	private String[] keys = new String[GROW_COUNT];
	private String[] values = new String[GROW_COUNT];
	int index = 0;
	int size = GROW_COUNT;

	public StringMap() {

	}

	@Override
	public int size() {

		return size;
	}

	@Override
	public boolean isEmpty() {

		return size == 0;
	}

	@Override
	public boolean containsKey(Object key) {
		for (String key1 : keys) {
			if (key1.equals(key)) {
				return true;
			}
		}
		return false;
	}

	@Override
	public boolean containsValue(Object value) {
		for (String key1 : values) {
			if (key1.equals(value)) {
				return true;
			}
		}
		return false;
	}

	@Override
	public String get(Object key) {

		return null;
	}

	@Override
	public String put(String key, String value) {

		if (index == size) {
			size += 4;
		}

		return null;
	}

	@Override
	public String remove(Object key) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void putAll(Map<? extends String, ? extends String> m) {
		// TODO Auto-generated method stub

	}

	@Override
	public void clear() {
		// TODO Auto-generated method stub

	}

	@Override
	public Set<String> keySet() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Collection<String> values() {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Set<java.util.Map.Entry<String, String>> entrySet() {
		// TODO Auto-generated method stub
		return null;
	}

}
