import java.awt.Container;
import java.util.ArrayList;
import java.util.Hashtable;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.AbstractTableModel;

import com.betfair.aping.App;
import com.betfair.aping.Betting;

public class SwingMain extends JFrame {

	JTable table;
	JScrollPane pane;
	JButton but;

	public SwingMain(String title) {
		super(title);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		Container contentPane = this.getContentPane();
		contentPane.setLayout(null);

		but = new JButton("blblbla");

		but.setLocation(20, 20);
		but.setSize(100, 20);

		contentPane.add(but);

		setSize(1000, 600);
		contentPane.setSize(800, 500);
		setVisible(true);

		setLocationRelativeTo(null);

		table = new JTable();

		pane = new JScrollPane();
		pane.add(table);
		pane.setLocation(20, 40);
		pane.setSize(600, 400);
		table.setFillsViewportHeight(true);

		contentPane.add(pane);

	}

	public static void main(String[] args) {
		Betting betting = new Betting();
		betting.setApp(new App());

		SwingMain frame = new SwingMain("swing tests");

		frame.setData(betting.getMatches());

		// betting.fetchMarketBook(null);
	}

	private void setData(final ArrayList<Hashtable<String, String>> matches) {
		table.setModel(new AbstractTableModel() {

			private static final long serialVersionUID = 1L;

			@Override
			public Object getValueAt(int rowIndex, int columnIndex) {

				return matches.get(rowIndex).values().toArray()[columnIndex];
			}

			@Override
			public int getRowCount() {

				return matches.size();
			}

			@Override
			public int getColumnCount() {

				return matches.get(0).size();
			}
		});
	}

	private static final long serialVersionUID = 4741507128571219377L;
}
